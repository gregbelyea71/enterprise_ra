import { ReactElement } from 'react';
import Card from '@material-ui/core/Card';
import { ListViewProps } from 'react-admin';
export declare const ListView: {
    (props: ListViewProps): ReactElement;
    propTypes: {
        actions: import("prop-types").Requireable<boolean | import("prop-types").ReactElementLike>;
        aside: import("prop-types").Requireable<import("prop-types").ReactElementLike>;
        basePath: import("prop-types").Requireable<string>;
        bulkActionButtons: import("prop-types").Requireable<boolean | import("prop-types").ReactElementLike>;
        children: import("prop-types").Requireable<import("prop-types").ReactElementLike>;
        className: import("prop-types").Requireable<string>;
        classes: import("prop-types").Requireable<object>;
        component: (props: any, propName: any, componentName: any) => Error;
        currentSort: import("prop-types").Requireable<import("prop-types").InferProps<{
            field: import("prop-types").Validator<string>;
            order: import("prop-types").Validator<string>;
        }>>;
        data: import("prop-types").Requireable<any>;
        defaultTitle: import("prop-types").Requireable<string>;
        displayedFilters: import("prop-types").Requireable<object>;
        exporter: import("prop-types").Requireable<boolean | ((...args: any[]) => any)>;
        filterDefaultValues: import("prop-types").Requireable<object>;
        filters: import("prop-types").Requireable<import("prop-types").ReactElementLike | import("prop-types").ReactElementLike[]>;
        filterValues: import("prop-types").Requireable<object>;
        hasCreate: import("prop-types").Requireable<boolean>;
        hideFilter: import("prop-types").Requireable<(...args: any[]) => any>;
        ids: import("prop-types").Requireable<any[]>;
        loading: import("prop-types").Requireable<boolean>;
        onSelect: import("prop-types").Requireable<(...args: any[]) => any>;
        onToggleItem: import("prop-types").Requireable<(...args: any[]) => any>;
        onUnselectItems: import("prop-types").Requireable<(...args: any[]) => any>;
        page: import("prop-types").Requireable<number>;
        pagination: import("prop-types").Requireable<boolean | import("prop-types").ReactElementLike>;
        perPage: import("prop-types").Requireable<number>;
        refresh: import("prop-types").Requireable<(...args: any[]) => any>;
        resource: import("prop-types").Requireable<string>;
        selectedIds: import("prop-types").Requireable<any[]>;
        setFilters: import("prop-types").Requireable<(...args: any[]) => any>;
        setPage: import("prop-types").Requireable<(...args: any[]) => any>;
        setPerPage: import("prop-types").Requireable<(...args: any[]) => any>;
        setSort: import("prop-types").Requireable<(...args: any[]) => any>;
        showFilter: import("prop-types").Requireable<(...args: any[]) => any>;
        title: import("prop-types").Requireable<string | import("prop-types").ReactElementLike>;
        total: import("prop-types").Requireable<number>;
        version: import("prop-types").Requireable<number>;
    };
    defaultProps: {
        actions: JSX.Element;
        classes: {};
        component: typeof Card;
        bulkActionButtons: JSX.Element;
        pagination: JSX.Element;
        empty: JSX.Element;
    };
};
//# sourceMappingURL=ListView.d.ts.map