import React, { useEffect } from 'react';
import { required, SimpleForm } from 'react-admin';
import { TestContext } from 'ra-test';
import { useForm } from 'react-final-form';
import { ThemeProvider, createMuiTheme, Card, CardContent, Toolbar, } from '@material-ui/core';
import { MarkdownInput } from '../src/MarkdownInput';
export default { title: 'ra-markdown/MarkdownInput' };
var MyToolbar = function () { return (React.createElement(Toolbar, null,
    React.createElement("span", null))); };
var record = { id: 0 };
export var Simple = function () { return (React.createElement(TestContext, { initialState: initialState },
    React.createElement(Card, null,
        React.createElement(CardContent, null,
            React.createElement(SimpleForm, { resource: "posts", record: record, toolbar: React.createElement(MyToolbar, null) },
                React.createElement(MarkdownInput, { label: "Body", source: "body" })))))); };
export var SimpleDark = function () { return (React.createElement(ThemeProvider, { theme: createMuiTheme({ palette: { type: 'dark' } }) },
    React.createElement(Simple, null))); };
export var WithHelperText = function () { return (React.createElement(TestContext, { initialState: initialState },
    React.createElement(Card, null,
        React.createElement(CardContent, null,
            React.createElement(SimpleForm, { resource: "posts", record: record, toolbar: React.createElement(MyToolbar, null) },
                React.createElement(MarkdownInput, { label: "Body", source: "body", helperText: "Enter your content here" })))))); };
export var WithHelperTextDark = function () { return (React.createElement(ThemeProvider, { theme: createMuiTheme({ palette: { type: 'dark' } }) },
    React.createElement(WithHelperText, null))); };
var validate = [required()];
var ValidateOnLoadToolbar = function () {
    var form = useForm();
    useEffect(function () {
        form.focus('body');
        form.change('body', '');
        form.blur('body');
        form.submit();
    }, [form]);
    return React.createElement(MyToolbar, null);
};
export var WithError = function () { return (React.createElement(TestContext, { initialState: initialState },
    React.createElement(Card, null,
        React.createElement(CardContent, null,
            React.createElement(SimpleForm, { resource: "posts", record: record, toolbar: React.createElement(ValidateOnLoadToolbar, null), save: function () {
                    /* */
                } },
                React.createElement(MarkdownInput, { label: "Body", source: "body", helperText: "Enter your content here", validate: validate })))))); };
export var WithErrorDark = function () { return (React.createElement(ThemeProvider, { theme: createMuiTheme({ palette: { type: 'dark' } }) },
    React.createElement(WithError, null))); };
var initialState = {
    admin: {
        resources: {
            posts: {
                data: { 7: { id: 7 } },
            },
        },
    },
};
