import { ReactElement, FC } from 'react';
import { ListProps } from 'react-admin';
import { EditDialogProps, CreateDialogProps } from '@react-admin/ra-form-layout';
import { CalendarProps } from './Calendar';
/**
 * Replace the List and Edit views by a Calendar, powered by Full Calendar
 *
 * This all-in one component renders a calendar, as well as a form to edit or
 * create new events that opens in a dialog.
 *
 * Use it as the `list` prop of a `<Resource>`. No need to specify an `edit`
 * or `create` prop for this resource, but you'll have to pass a form component
 * (like `<SimpleForm>`) as child of `<CompleteCalendar>` to define the event
 * edition form.
 *
 * Accepted props:
 * - children: A Form element with Input children
 * - ListProps: Props passed to the `<List>` component
 * - CalendarProps: Props passed to the `<Calendar>` component
 * - EditDialogProps: Props passed to the `<EditDialog>` component
 * - CreateDialogProps: Props passed to the `<CreateDialog>` component
 *
 * @example
 * ```
 * import React, { FC } from 'react';
 * import {
 *     Admin,
 *     Resource,
 *     List,
 *     ListProps,
 *     SimpleForm,
 *     TextInput,
 *     DateTimeInput,
 * } from 'react-admin';
 * import { CompleteCalendar } from '@react-admin/ra-calendar';
 *
 * import dataProvider from './dataProvider';
 *
 * const EventList: FC<ListProps> = props => (
 *     <CompleteCalendar {...props}>
 *         <SimpleForm>
 *             <TextInput source="title" autoFocus />
 *             <DateTimeInput source="start" />
 *             <DateTimeInput source="end" />
 *         </SimpleForm>
 *     </CompleteCalendar>
 * );
 *
 * export const Basic: FC = () => (
 *     <Admin dataProvider={dataProvider}>
 *         <Resource name="events" list={EventList} />
 *     </Admin>
 * );
 * ```
 */
export declare const CompleteCalendar: FC<CompleteCalendarProps>;
export interface CompleteCalendarProps {
    children?: ReactElement;
    CalendarProps?: CalendarProps;
    ListProps?: ListProps;
    EditDialogProps?: EditDialogProps;
    CreateDialogProps?: CreateDialogProps;
}
//# sourceMappingURL=CompleteCalendar.d.ts.map