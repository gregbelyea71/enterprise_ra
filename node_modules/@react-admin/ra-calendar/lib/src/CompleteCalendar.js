"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CompleteCalendar = void 0;
var React = __importStar(require("react"));
var react_admin_1 = require("react-admin");
var ra_form_layout_1 = require("@react-admin/ra-form-layout");
var Calendar_1 = require("./Calendar");
var getFilterValuesFromInterval_1 = require("./getFilterValuesFromInterval");
/**
 * Replace the List and Edit views by a Calendar, powered by Full Calendar
 *
 * This all-in one component renders a calendar, as well as a form to edit or
 * create new events that opens in a dialog.
 *
 * Use it as the `list` prop of a `<Resource>`. No need to specify an `edit`
 * or `create` prop for this resource, but you'll have to pass a form component
 * (like `<SimpleForm>`) as child of `<CompleteCalendar>` to define the event
 * edition form.
 *
 * Accepted props:
 * - children: A Form element with Input children
 * - ListProps: Props passed to the `<List>` component
 * - CalendarProps: Props passed to the `<Calendar>` component
 * - EditDialogProps: Props passed to the `<EditDialog>` component
 * - CreateDialogProps: Props passed to the `<CreateDialog>` component
 *
 * @example
 * ```
 * import React, { FC } from 'react';
 * import {
 *     Admin,
 *     Resource,
 *     List,
 *     ListProps,
 *     SimpleForm,
 *     TextInput,
 *     DateTimeInput,
 * } from 'react-admin';
 * import { CompleteCalendar } from '@react-admin/ra-calendar';
 *
 * import dataProvider from './dataProvider';
 *
 * const EventList: FC<ListProps> = props => (
 *     <CompleteCalendar {...props}>
 *         <SimpleForm>
 *             <TextInput source="title" autoFocus />
 *             <DateTimeInput source="start" />
 *             <DateTimeInput source="end" />
 *         </SimpleForm>
 *     </CompleteCalendar>
 * );
 *
 * export const Basic: FC = () => (
 *     <Admin dataProvider={dataProvider}>
 *         <Resource name="events" list={EventList} />
 *     </Admin>
 * );
 * ```
 */
var CompleteCalendar = function (props) {
    var CalendarProps = props.CalendarProps, EditDialogProps = props.EditDialogProps, CreateDialogProps = props.CreateDialogProps, ListProps = props.ListProps, children = props.children, rest = __rest(props, ["CalendarProps", "EditDialogProps", "CreateDialogProps", "ListProps", "children"]);
    return (React.createElement(React.Fragment, null,
        React.createElement(react_admin_1.List, __assign({ filterDefaultValues: getFilterValuesFromInterval_1.getFilterValuesFromInterval(), perPage: 1000 }, ListProps, rest, { pagination: false, hasCreate: true }),
            React.createElement(Calendar_1.Calendar, __assign({}, CalendarProps))),
        React.createElement(ra_form_layout_1.EditDialog, __assign({ title: "Edit event" }, EditDialogProps, rest), children),
        React.createElement(ra_form_layout_1.CreateDialog, __assign({}, CreateDialogProps, rest), children)));
};
exports.CompleteCalendar = CompleteCalendar;
