"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConvertToEvent = exports.CustomLocale = exports.CustomContent = exports.DarkTheme = exports.Basic = void 0;
var react_1 = __importDefault(require("react"));
var react_admin_1 = require("react-admin");
var history_1 = require("history");
var styles_1 = require("@material-ui/core/styles");
var locales_all_1 = __importDefault(require("@fullcalendar/core/locales-all"));
var src_1 = require("../src");
var dataProvider_1 = __importDefault(require("./dataProvider"));
exports.default = { title: 'ra-calendar/Calendar' };
var EventList = function (props) { return (react_1.default.createElement(react_admin_1.List, __assign({}, props, { filterDefaultValues: src_1.getFilterValuesFromInterval(), perPage: 1000, pagination: false }),
    react_1.default.createElement(src_1.Calendar, null))); };
var EventEdit = function (props) { return (react_1.default.createElement(react_admin_1.Edit, __assign({}, props),
    react_1.default.createElement(react_admin_1.SimpleForm, null,
        react_1.default.createElement(react_admin_1.TextInput, { source: "title" }),
        react_1.default.createElement(react_admin_1.DateTimeInput, { source: "start" }),
        react_1.default.createElement(react_admin_1.DateTimeInput, { source: "end" })))); };
var EventCreate = function (props) { return (react_1.default.createElement(react_admin_1.Create, __assign({}, props),
    react_1.default.createElement(react_admin_1.SimpleForm, null,
        react_1.default.createElement(react_admin_1.TextInput, { source: "title" }),
        react_1.default.createElement(react_admin_1.DateTimeInput, { source: "start" }),
        react_1.default.createElement(react_admin_1.DateTimeInput, { source: "end" })))); };
var Basic = function () { return (react_1.default.createElement(react_admin_1.Admin, { history: history_1.createMemoryHistory(), dataProvider: dataProvider_1.default },
    react_1.default.createElement(react_admin_1.Resource, { name: "events", list: EventList, edit: EventEdit, create: EventCreate }))); };
exports.Basic = Basic;
var DarkTheme = function () { return (react_1.default.createElement(react_admin_1.Admin, { history: history_1.createMemoryHistory(), dataProvider: dataProvider_1.default, theme: styles_1.createMuiTheme({
        palette: {
            type: 'dark',
        },
    }) },
    react_1.default.createElement(react_admin_1.Resource, { name: "events", list: EventList, edit: EventEdit, create: EventCreate }))); };
exports.DarkTheme = DarkTheme;
var EventListWithCustomContent = function (props) { return (react_1.default.createElement(react_admin_1.List, __assign({}, props, { filterDefaultValues: src_1.getFilterValuesFromInterval(), perPage: 1000, pagination: false }),
    react_1.default.createElement(src_1.Calendar, { eventContent: function (eventContent) { return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement("b", null, eventContent.timeText),
            ' ',
            react_1.default.createElement("i", null, eventContent.event.title))); } }))); };
var CustomContent = function () { return (react_1.default.createElement(react_admin_1.Admin, { history: history_1.createMemoryHistory(), dataProvider: dataProvider_1.default },
    react_1.default.createElement(react_admin_1.Resource, { name: "events", list: EventListWithCustomContent, edit: EventEdit, create: EventCreate }))); };
exports.CustomContent = CustomContent;
var EventListWithCustomLocale = function (props) { return (react_1.default.createElement(react_admin_1.List, __assign({}, props, { filterDefaultValues: src_1.getFilterValuesFromInterval(), perPage: 1000, pagination: false }),
    react_1.default.createElement(src_1.Calendar, { locales: locales_all_1.default, locale: src_1.getNavigatorLanguage() }))); };
var CustomLocale = function () { return (react_1.default.createElement(react_admin_1.Admin, { history: history_1.createMemoryHistory(), dataProvider: dataProvider_1.default },
    react_1.default.createElement(react_admin_1.Resource, { name: "events", list: EventListWithCustomLocale, edit: EventEdit, create: EventCreate }))); };
exports.CustomLocale = CustomLocale;
var dummyDataProvider_1 = __importDefault(require("./dummyDataProvider"));
var EventListWithConvertToEvent = function (props) { return (react_1.default.createElement(react_admin_1.List, __assign({}, props, { filterDefaultValues: src_1.getFilterValuesFromInterval(), perPage: 1000, pagination: false }),
    react_1.default.createElement(src_1.Calendar, { convertToEvent: function (event) { return ({
            id: String(event.id),
            title: event.name,
            start: event.begin,
            end: event.finish,
            allDay: event.allDay,
        }); }, getFilterValueFromInterval: function (dateInfo) { return ({
            begin_gte: dateInfo.startStr,
            begin_lte: dateInfo.endStr,
        }); }, initialView: "dayGridWeek" }))); };
var ConvertToEvent = function () { return (react_1.default.createElement(react_admin_1.Admin, { history: history_1.createMemoryHistory(), dataProvider: dummyDataProvider_1.default },
    react_1.default.createElement(react_admin_1.Resource, { name: "events", list: EventListWithConvertToEvent, edit: EventEdit, create: EventCreate }))); };
exports.ConvertToEvent = ConvertToEvent;
