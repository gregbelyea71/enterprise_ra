var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Admin, Resource, ListGuesser, Edit, FormTab, TextInput, } from 'react-admin';
import fakeRestDataProvider from 'ra-data-fakerest';
import generateData from 'data-generator-retail';
import { TabbedForm } from '../../src';
export default { title: 'ra-rbac/form/TabbedForm' };
var data = generateData();
var dataProvider = fakeRestDataProvider(data, true);
var authProvider = {
    checkAuth: function () { return Promise.resolve(); },
    login: function () { return Promise.resolve(); },
    logout: function () { return Promise.resolve(); },
    checkError: function () { return Promise.resolve(); },
    getPermissions: function () {
        return promiseFor({
            permissions: [
                // 'delete' is missing
                { action: ['list', 'edit'], resource: 'products' },
            ],
        });
    },
};
var ProductEdit = function (props) { return (React.createElement(Edit, __assign({}, props),
    React.createElement(TabbedForm, null,
        React.createElement(FormTab, { label: "Description" },
            React.createElement(TextInput, { source: "reference" }),
            React.createElement(TextInput, { source: "width" }),
            React.createElement(TextInput, { source: "height" }),
            React.createElement(TextInput, { source: "description" })),
        React.createElement(FormTab, { label: "Images" },
            React.createElement(TextInput, { source: "image" }),
            React.createElement(TextInput, { source: "thumbnail" })),
        React.createElement(FormTab, { label: "Stock" },
            React.createElement(TextInput, { source: "stock" }))))); };
export var Basic = function () { return (React.createElement(Admin, { authProvider: authProvider, dataProvider: dataProvider },
    React.createElement(Resource, { name: "products", list: ListGuesser, edit: ProductEdit }),
    React.createElement(Resource, { name: "categories" }))); };
var promiseFor = function (result) {
    return new Promise(function (resolve) {
        setTimeout(function () {
            resolve(result);
        }, 300);
    });
};
