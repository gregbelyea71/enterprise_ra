/// <reference types="react" />
import { FormTabProps } from 'react-admin';
/**
 * Replacement for the default <FormTab> that only renders a tab if the user has the right permissions.
 *
 * Add a name prop to the FormTab to define the sub-resource that the user needs to have the right permissions for.
 *
 * <FormTab> also only renders the child inputs for which the user has the 'write' permissions.
 *
 * @example
 * import { Edit, TabbedForm, TextInput } from 'react-admin';
 * import { FormTab } from '@react-admin/ra-rbac';
 *
 * const authProvider = {
 *     // ...
 *     getPermissions: () =>
 *         promiseFor({
 *             permissions: [
 *                 { action: ['list', 'edit'], resource: 'products' },
 *                 { action: 'write', resource: 'products.reference' },
 *                 { action: 'write', resource: 'products.width' },
 *                 { action: 'write', resource: 'products.height' },
 *                 // 'products.description' is missing
 *                 { action: 'write', resource: 'products.thumbnail' },
 *                 // 'products.image' is missing
 *                 { action: 'write', resource: 'products.tab.description' },
 *                 { action: 'write', resource: 'products.tab.images' },
 *                 // 'products.tab.stock' is missing
 *             ],
 *         }),
 * };
 *
 * const ProductEdit = props => (
 *     <Edit {...props}>
 *         <TabbedForm>
 *             <FormTab label="Description" name="description">
 *                 <TextInput source="reference" />
 *                 <TextInput source="width" />
 *                 <TextInput source="height" />
 *                 // not displayed
 *                 <TextInput source="description" />
 *             </FormTab>
 *             <FormTab label="Images" name="images">
 *                 // not displayed
 *                 <TextInput source="image" />
 *                 <TextInput source="thumbnail" />
 *             </FormTab>
 *             // not displayed
 *             <FormTab label="Stock" name="stock">
 *                 <TextInput source="stock" />
 *             </FormTab>
 *         </TabbedForm>
 *     </Edit>
 * );
 */
export declare const FormTab: {
    ({ name, basePath, className, classes, contentClassName, children, hidden, icon, intent, label, margin, path, record, resource, variant, value, ...rest }: FormTabWithPermissionsProps): JSX.Element;
    displayName: string;
};
export interface FormTabWithPermissionsProps extends FormTabProps {
    name: string;
}
//# sourceMappingURL=FormTab.d.ts.map