import * as React from 'react';
import { SimpleFormProps } from 'react-admin';
/**
 * Alternative to react-admin's <SimpleForm> that adds RBAC control to inputs
 *
 * To see an input, the user must have the permission to write the resource field:
 * { "action": "write", "resource": `${resource}.${source}` }
 *
 * SimpleForm also renders the delete button only if the user has the 'delete' permission.
 *
 * @example
 * import { SimpleForm } from '@react-admin/ra-rbac';
 *
 * const authProvider = {
 *     // ...
 *     getPermissions: () => Promise.resolve({
 *         permissions: [
 *             // 'delete' is missing
 *             { action: ['list', 'edit'], resource: 'products' },
 *             { action: 'write', resource: 'products.reference' },
 *             { action: 'write', resource: 'products.width' },
 *             { action: 'write', resource: 'products.height' },
 *             // 'products.description' is missing
 *             { action: 'write', resource: 'products.thumbnail' },
 *             // 'products.image' is missing
 *         ]
 *     }),
 * };
 *
 * const ProductEdit = props => (
 *     <Edit {...props}>
 *         <SimpleForm> // <-- RBAC SimpleForm
 *             <TextInput source="reference" />
 *             <TextInput source="width" />
 *             <TextInput source="height" />
 *             // not displayed
 *             <TextInput source="description" />
 *             // not displayed
 *             <TextInput source="image" />
 *             <TextInput source="thumbnail" />
 *             // no delete button
 *         </SimpleForm>
 *     </Edit>
 * );
 */
export declare const SimpleForm: {
    (props: SimpleFormProps): JSX.Element;
    propTypes: React.WeakValidationMap<SimpleFormProps>;
};
//# sourceMappingURL=SimpleForm.d.ts.map