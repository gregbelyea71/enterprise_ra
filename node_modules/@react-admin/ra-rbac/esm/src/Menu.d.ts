/// <reference types="react" />
import PropTypes from 'prop-types';
import { MenuProps } from 'react-admin';
export declare const MENU_WIDTH = 240;
export declare const CLOSED_MENU_WIDTH = 55;
/**
 * A replacement for react-admin's `<Menu>` component, which only displays
 * the menu items that the current user has access to (using the `list` action).
 *
 * Pass this menu to a `<Layout>`, and pass that layout to the `<Admin>` component to use it.
 *
 * @example
 * import { Admin, Resource, ListGuesser, Layout, LayoutProps } from 'react-admin';
 * import { Menu } from '@react-admin/ra-rbac';
 *
 * import * as posts from './posts';
 * import * as comments from './comments';
 * import * as users from './users';
 *
 * const authProvider= {
 *     // ...
 *     getPermissions: () => Promise.resolve([
 *         { "action": "*", "resource": "posts" },
 *         { "action": "*", "resource": "comments" },
 *     ]),
 * };
 *
 * const CustomLayout = (props: LayoutProps) => <Layout {...props} menu={Menu} />;
 *
 * const App = () => (
 *     <Admin dataProvider={...} authProvider={...} layout={CustomLayout}>
 *         <Resource name="posts" {...posts} />
 *         <Resource name="comments" {...comments} />
 *         <Resource name="users" {...users} />
 *     </Admin>
 * ); // the user won't see the Users menu
 */
export declare const Menu: {
    (props: MenuProps): JSX.Element;
    propTypes: {
        classes: PropTypes.Requireable<object>;
        className: PropTypes.Requireable<string>;
        dense: PropTypes.Requireable<boolean>;
        hasDashboard: PropTypes.Requireable<boolean>;
        logout: PropTypes.Requireable<PropTypes.ReactElementLike>;
        onMenuClick: PropTypes.Requireable<(...args: any[]) => any>;
    };
    defaultProps: {
        onMenuClick: () => any;
    };
};
//# sourceMappingURL=Menu.d.ts.map