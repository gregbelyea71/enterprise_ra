"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Show = void 0;
var React = __importStar(require("react"));
var react_admin_1 = require("react-admin");
var ShowActions_1 = require("./ShowActions");
/**
 * Replacement for react-admin's Show that adds RBAC control to actions
 *
 * Users must have the 'edit' permission on the resource and record to see the EditButton.
 *
 * @example
 * import { Show } from '@react-admin/ra-rbac';
 *
 * const authProvider = {
 *      // ...
 *      getPermissions: () => Promise.resolve({
 *           permissions: [
 *                 { action: ['list', 'show', 'edit'], resource: 'products' },
 *           ],
 *       }),
 * };
 *
 * export const PostShow = (props) => (
 *     <Show {...props}>
 *         ...
 *     </Show>
 * );
 * // user will see the following actions on top of the Show:
 * // - edit
 */
var Show = function (props) {
    return React.createElement(react_admin_1.Show, __assign({ actions: React.createElement(ShowActions_1.ShowActions, null) }, props));
};
exports.Show = Show;
exports.Show.propTypes = react_admin_1.Show.propTypes;
