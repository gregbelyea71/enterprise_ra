"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAuthenticated = void 0;
var react_1 = require("react");
var react_admin_1 = require("react-admin");
var emptyParams = {};
/**
 * Restrict access to authenticated users.
 *
 * Returns loading state while calling the authProvider,
 * and redirects anonymous users to the login page.
 *
 * Use it in replacement for react-admin's useAuthenticated to force a blanc render while calling the authProvider.
 *
 * @example
 * import { useAuthenticated } from '@react-admin/ra-rbac';
 *
 * const SecretData = () => {
 *     const { loading } = useAuthenticated();
 *     return loading ? null : <span>For your eyes only</span>;
 * }
 */
var useAuthenticated = function () {
    var _a = react_admin_1.useSafeSetState(false), loaded = _a[0], setLoaded = _a[1];
    var checkAuth = react_admin_1.useCheckAuth();
    react_1.useEffect(function () {
        checkAuth(emptyParams)
            .then(function () {
            setLoaded(true);
        })
            .catch(function () {
            // the redirect to login has already happened - useCheckAuth took care of it
        });
    }, [checkAuth, setLoaded]);
    return { authenticated: loaded, loaded: loaded, loading: !loaded };
};
exports.useAuthenticated = useAuthenticated;
