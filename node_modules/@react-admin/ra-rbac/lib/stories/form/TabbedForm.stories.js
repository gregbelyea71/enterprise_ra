"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Basic = void 0;
var react_1 = __importDefault(require("react"));
var react_admin_1 = require("react-admin");
var ra_data_fakerest_1 = __importDefault(require("ra-data-fakerest"));
var data_generator_retail_1 = __importDefault(require("data-generator-retail"));
var src_1 = require("../../src");
exports.default = { title: 'ra-rbac/form/TabbedForm' };
var data = data_generator_retail_1.default();
var dataProvider = ra_data_fakerest_1.default(data, true);
var authProvider = {
    checkAuth: function () { return Promise.resolve(); },
    login: function () { return Promise.resolve(); },
    logout: function () { return Promise.resolve(); },
    checkError: function () { return Promise.resolve(); },
    getPermissions: function () {
        return promiseFor({
            permissions: [
                // 'delete' is missing
                { action: ['list', 'edit'], resource: 'products' },
            ],
        });
    },
};
var ProductEdit = function (props) { return (react_1.default.createElement(react_admin_1.Edit, __assign({}, props),
    react_1.default.createElement(src_1.TabbedForm, null,
        react_1.default.createElement(react_admin_1.FormTab, { label: "Description" },
            react_1.default.createElement(react_admin_1.TextInput, { source: "reference" }),
            react_1.default.createElement(react_admin_1.TextInput, { source: "width" }),
            react_1.default.createElement(react_admin_1.TextInput, { source: "height" }),
            react_1.default.createElement(react_admin_1.TextInput, { source: "description" })),
        react_1.default.createElement(react_admin_1.FormTab, { label: "Images" },
            react_1.default.createElement(react_admin_1.TextInput, { source: "image" }),
            react_1.default.createElement(react_admin_1.TextInput, { source: "thumbnail" })),
        react_1.default.createElement(react_admin_1.FormTab, { label: "Stock" },
            react_1.default.createElement(react_admin_1.TextInput, { source: "stock" }))))); };
var Basic = function () { return (react_1.default.createElement(react_admin_1.Admin, { authProvider: authProvider, dataProvider: dataProvider },
    react_1.default.createElement(react_admin_1.Resource, { name: "products", list: react_admin_1.ListGuesser, edit: ProductEdit }),
    react_1.default.createElement(react_admin_1.Resource, { name: "categories" }))); };
exports.Basic = Basic;
var promiseFor = function (result) {
    return new Promise(function (resolve) {
        setTimeout(function () {
            resolve(result);
        }, 300);
    });
};
