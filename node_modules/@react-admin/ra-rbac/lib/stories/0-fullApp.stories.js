"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FullApp = void 0;
var react_1 = __importDefault(require("react"));
var react_admin_1 = require("react-admin");
var ra_data_fakerest_1 = __importDefault(require("ra-data-fakerest"));
var data_generator_retail_1 = __importDefault(require("data-generator-retail"));
var src_1 = require("../src");
var fullApp_1 = require("./fullApp");
var product_1 = __importDefault(require("./fullApp/product"));
exports.default = { title: 'ra-rbac/Full App' };
var roles = {
    accountant: [
        { action: ['list', 'show'], resource: 'products' },
        { action: 'read', resource: 'products.*' },
        { type: 'deny', action: 'read', resource: 'products.description' },
        { action: 'list', resource: 'categories' },
        { action: 'read', resource: 'categories.*' },
        { action: ['list', 'show'], resource: 'customers' },
        { action: 'read', resource: 'customers.*' },
        { action: '*', resource: 'invoices' },
    ],
    contentEditor: [
        {
            action: ['list', 'create', 'edit', 'delete', 'export'],
            resource: 'products',
        },
        { action: 'read', resource: 'products.*' },
        { type: 'deny', action: 'read', resource: 'products.stock' },
        { type: 'deny', action: 'read', resource: 'products.sales' },
        { action: 'write', resource: 'products.*' },
        { type: 'deny', action: 'write', resource: 'products.stock' },
        { type: 'deny', action: 'write', resource: 'products.sales' },
        { action: 'list', resource: 'categories' },
        { action: ['list', 'edit'], resource: 'customers' },
        { action: ['list', 'edit'], resource: 'reviews' },
    ],
    stockManager: [
        { action: ['list', 'edit', 'export'], resource: 'products' },
        { action: 'read', resource: 'products.*' },
        {
            type: 'deny',
            action: 'read',
            resource: 'products.description',
        },
        { action: 'write', resource: 'products.stock' },
        { action: 'write', resource: 'products.sales' },
        { action: 'list', resource: 'categories' },
    ],
    administrator: [{ action: '*', resource: '*' }],
};
var data = data_generator_retail_1.default();
var dataProvider = ra_data_fakerest_1.default(data, true);
var authProvider = {
    checkAuth: function () {
        var role = localStorage.getItem('role');
        return role ? Promise.resolve() : Promise.reject();
    },
    login: function (_a) {
        var role = _a.role;
        localStorage.setItem('role', role);
        return Promise.resolve();
    },
    logout: function () {
        localStorage.removeItem('role');
        return Promise.resolve();
    },
    checkError: function () { return Promise.resolve(); },
    getIdentity: function () {
        var role = localStorage.getItem('role');
        return Promise.resolve({
            id: role,
            fullName: {
                accountant: 'Accountant',
                contentEditor: 'Content Editor',
                stockManager: 'Stock manager',
                administrator: 'Administrator',
            }[role],
        });
    },
    getPermissions: function () {
        var role = localStorage.getItem('role');
        return Promise.resolve({
            roles: [role],
        });
    },
    getRoles: function () { return Promise.resolve(roles); },
};
var CustomLayout = function (props) { return react_1.default.createElement(react_admin_1.Layout, __assign({}, props, { menu: src_1.Menu })); };
var FullApp = function () { return (react_1.default.createElement(react_admin_1.Admin, { loginPage: fullApp_1.LoginPage, layout: CustomLayout, authProvider: authProvider, dataProvider: dataProvider },
    react_1.default.createElement(src_1.Resource, __assign({ name: "products" }, product_1.default)),
    react_1.default.createElement(src_1.Resource, { name: "categories", list: react_admin_1.ListGuesser, show: react_admin_1.ShowGuesser, edit: react_admin_1.EditGuesser }),
    react_1.default.createElement(src_1.Resource, { name: "commands", list: react_admin_1.ListGuesser, show: react_admin_1.ShowGuesser, edit: react_admin_1.EditGuesser }),
    react_1.default.createElement(src_1.Resource, { name: "invoices", list: react_admin_1.ListGuesser, show: react_admin_1.ShowGuesser, edit: react_admin_1.EditGuesser }),
    react_1.default.createElement(src_1.Resource, { name: "customers", list: react_admin_1.ListGuesser, show: react_admin_1.ShowGuesser, edit: react_admin_1.EditGuesser }),
    react_1.default.createElement(src_1.Resource, { name: "reviews", list: react_admin_1.ListGuesser, show: react_admin_1.ShowGuesser, edit: react_admin_1.EditGuesser }))); };
exports.FullApp = FullApp;
