import * as React from 'react';
import { renderWithRedux } from 'ra-test';
import { SidebarOpenPreferenceSync } from './SidebarOpenPreferenceSync';
import { writeStorage } from '../preferencesStorage';
import { setSidebarVisibility } from 'react-admin';

describe('SidebarOpenPreferenceSync', () => {
    test('should not change the initial state on mount when the preference is not set', () => {
        const { dispatch } = renderWithRedux(<SidebarOpenPreferenceSync />);

        expect(dispatch).not.toHaveBeenCalled();
    });

    test('should not change the initial state on mount when the preference is set', () => {
        writeStorage('ui.sidebarOpen', false);
        const localStorageSetItemSpy = jest.spyOn(Storage.prototype, 'setItem');
        const { dispatch } = renderWithRedux(<SidebarOpenPreferenceSync />);

        expect(dispatch).toHaveBeenCalledWith(setSidebarVisibility(false));
        expect(localStorageSetItemSpy).not.toHaveBeenCalled();
    });

    test('should update the preference when the redux value changes', () => {
        writeStorage('ui.sidebarOpen', false);
        const localStorageSetItemSpy = jest.spyOn(Storage.prototype, 'setItem');
        const { dispatch } = renderWithRedux(<SidebarOpenPreferenceSync />);

        dispatch(setSidebarVisibility(true));
        expect(localStorageSetItemSpy).toHaveBeenCalled();
    });
});
